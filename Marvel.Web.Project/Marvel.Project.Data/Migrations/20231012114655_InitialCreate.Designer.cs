// <auto-generated />
using System;
using Marvel.Project.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Marvel.Project.Data.Migrations
{
    [DbContext(typeof(MarvelProjectDbContext))]
    [Migration("20231012114655_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.2");

            modelBuilder.Entity("Marvel.Project.Core.Entities.Hero", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("ActualFirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ActualLastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Heroes", (string)null);
                });

            modelBuilder.Entity("Marvel.Project.Core.Entities.HeroMovie", b =>
                {
                    b.Property<Guid>("HeroId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("MovieId")
                        .HasColumnType("TEXT");

                    b.HasKey("HeroId", "MovieId");

                    b.HasIndex("MovieId");

                    b.ToTable("HeroMovie");
                });

            modelBuilder.Entity("Marvel.Project.Core.Entities.Movie", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Movies", (string)null);
                });

            modelBuilder.Entity("Marvel.Project.Core.Entities.Villain", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("ActualFirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ActualLastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Villains", (string)null);
                });

            modelBuilder.Entity("Marvel.Project.Core.Entities.VillainMovie", b =>
                {
                    b.Property<Guid>("VillainId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("MovieId")
                        .HasColumnType("TEXT");

                    b.HasKey("VillainId", "MovieId");

                    b.HasIndex("MovieId");

                    b.ToTable("VillainMovie");
                });

            modelBuilder.Entity("Marvel.Project.Core.Entities.HeroMovie", b =>
                {
                    b.HasOne("Marvel.Project.Core.Entities.Hero", "Hero")
                        .WithMany("Movies")
                        .HasForeignKey("HeroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Marvel.Project.Core.Entities.Movie", "Movie")
                        .WithMany("Heroes")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hero");

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("Marvel.Project.Core.Entities.VillainMovie", b =>
                {
                    b.HasOne("Marvel.Project.Core.Entities.Movie", "Movie")
                        .WithMany("Villains")
                        .HasForeignKey("MovieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Marvel.Project.Core.Entities.Villain", "Villain")
                        .WithMany("Movies")
                        .HasForeignKey("VillainId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Movie");

                    b.Navigation("Villain");
                });

            modelBuilder.Entity("Marvel.Project.Core.Entities.Hero", b =>
                {
                    b.Navigation("Movies");
                });

            modelBuilder.Entity("Marvel.Project.Core.Entities.Movie", b =>
                {
                    b.Navigation("Heroes");

                    b.Navigation("Villains");
                });

            modelBuilder.Entity("Marvel.Project.Core.Entities.Villain", b =>
                {
                    b.Navigation("Movies");
                });
#pragma warning restore 612, 618
        }
    }
}
